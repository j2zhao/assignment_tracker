new run: 1668563433.86153 
format error: None 
execution error: None 

y_train = y_train.reshape(-1)
y_test = y_test.reshape(-1)
new run: 1668568154.728645 
format error: None 
execution error: None 

import pandas as pd
import numpy as np
new run: 1668568284.424339 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv')
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668568290.809641 
format error: None 
execution error: None 

testing
new run: 1668568296.990481 
format error: None 
execution error: None 
training
new run: 1668568338.311625 
format error: None 
execution error: None 

training = training.dropna()
testing = testing.dropna()
new run: 1668568339.573477 
format error: None 
execution error: None 

dropped_column = ['Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepTime', 'DepDelay', 'ArrTime', 'ArrDelayMinutes', 'AirTime', 'ActualElapsedTime', 'DepDelayMinutes', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrDel15', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']
new run: 1668568520.25187 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
new run: 1668568521.61126 
format error: None 
execution error: None 

training.keys()
new run: 1668568523.2336168 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668568573.663571 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668568574.696565 
format error: None 
execution error: None 

testing.keys()
new run: 1668568577.3951921 
format error: None 
execution error: None 

for col in training:
    print(col)
    print(training[col].unique())
new run: 1668568578.560002 
format error: None 
execution error: None 

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]
new run: 1668568581.471779 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

new run: 1668568605.929015 
format error: None 
execution error: None 

encode = OneHotEncoder(handle_unknown = 'ignore')

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668568607.115274 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668568608.079515 
format error: None 
execution error: None 

for i in range(len(array)):
    print(array[i].shape)

new run: 1668568609.136692 
format error: None 
execution error: None 

from scipy.sparse import hstack

new run: 1668568610.44928 
format error: None 
execution error: None 

col_2 = ['CRSDepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
new run: 1668568624.445697 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668568625.769532 
format error: None 
execution error: None 

y_train = training['DepDel15'].to_numpy().reshape(-1)
y_test = testing['DepDel15'].to_numpy().reshape(-1)
new run: 1668568626.923885 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668568713.1877692 
format error: None 
execution error: None 

from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import confusion_matrix
from sklearn.metrics import ConfusionMatrixDisplay
import matplotlib.pyplot as plt
new run: 1668568717.921074 
format error: None 
execution error: None 

y_train = y_train.reshape(-1)
y_test = y_test.reshape(-1)
new run: 1668568890.967787 
format error: None 
execution error: None 


model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 1000)
model.fit(X_train, y_train)
new run: 1668568911.9320672 
format error: None 
execution error: 'RandomForestClassifier' object has no attribute 'transform' 

y_out = model.transform(X_test)

new run: 1668568989.964104 
format error: None 
execution error: None 

y_out = model.predict(X_test)

new run: 1668569064.009686 
format error: None 
execution error: name 'disp' is not defined 



matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
disp.plot()
plt.show()
new run: 1668569081.95612 
format error: None 
execution error: None 



matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668569238.770437 
format error: None 
execution error: None 


model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668569517.740646 
format error: None 
execution error: None 

y_out = model.predict(X_test)

new run: 1668569524.4676611 
format error: None 
execution error: None 



matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668569725.452092 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv')
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668569726.581398 
format error: None 
execution error: None 

dropped_column = ['Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepTime', 'DepDelay', 'ArrTime', 'ArrDelayMinutes', 'AirTime', 'ActualElapsedTime', 'DepDelayMinutes', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrDel15', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']
new run: 1668569769.8609972 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668569941.71423 
format error: None 
execution error: None 


dropped_column = ['Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepTime', 'DepDelay', 'ArrTime', 'ArrDelayMinutes', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668570095.769409 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668570097.216565 
format error: None 
execution error: None 

training.keys()
new run: 1668570393.631634 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv')
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668570436.922496 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668570438.235948 
format error: None 
execution error: None 


dropped_column = ['Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'ArrDelayMinutes', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668570573.834273 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668570575.0307992 
format error: None 
execution error: None 

training.keys()
new run: 1668570576.4642692 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668570639.948583 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668570697.165378 
format error: None 
execution error: None 

testing.keys()
new run: 1668570777.578058 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668570825.1325471 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668570859.868959 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668570861.166702 
format error: None 
execution error: None 


col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668570879.352278 
format error: None 
execution error: "['Flight_Number_Marketing_Airline'] not found in axis" 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668570929.91679 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668570941.937192 
format error: None 
execution error: None 

y_train = training['DepDel15'].to_numpy().reshape(-1)
y_test = testing['DepDel15'].to_numpy().reshape(-1)
new run: 1668570949.8850718 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668571130.934376 
format error: None 
execution error: None 


model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668571223.2279732 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668571635.7212842 
format error: None 
execution error: None 

y_train = training['ArrDel15'].to_numpy().reshape(-1)
y_test = testing['ArrDel15'].to_numpy().reshape(-1)
new run: 1668571643.1013079 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668571780.181335 
format error: None 
execution error: None 


model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668572212.1379242 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668572362.153733 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668572394.655652 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668572428.650419 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668572432.533667 
format error: None 
execution error:  

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668572433.465415 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668572434.532598 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668572435.9719198 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668572441.0675032 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668572469.8211288 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668572470.992658 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668572471.954943 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668572472.896152 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668572490.094851 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668572556.0128288 
format error: None 
execution error: None 

y_train = training['ArrDel15'].to_numpy().reshape(-1)
y_test = testing['ArrDel15'].to_numpy().reshape(-1)
new run: 1668572556.934653 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668572707.142142 
format error: None 
execution error: None 


model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668572819.447888 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668572821.768686 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668572946.915724 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668572983.613823 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668572984.731105 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668572985.647755 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668572986.86952 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668573007.094927 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668573008.16499 
format error: None 
execution error: None 

y_train = training['ArrDel15'].to_numpy().reshape(-1)
y_test = testing['ArrDel15'].to_numpy().reshape(-1)
new run: 1668573029.418585 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668573186.235262 
format error: None 
execution error: None 


model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668574796.391917 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668574798.692238 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668575342.0352829 
format error: None 
execution error: None 


dropped_column = ['ArrDelayMinutes', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668575346.436331 
format error: None 
execution error: "['ArrDelayMinutes'] not found in axis" 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668575617.669748 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv')
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668575663.562675 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668575664.575029 
format error: None 
execution error: None 


dropped_column = ['ArrDel15', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668575790.439957 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668575791.499813 
format error: None 
execution error: None 

training.keys()
new run: 1668575792.411268 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668575849.72257 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668575850.715313 
format error: None 
execution error: None 

testing.keys()
new run: 1668575875.922397 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668575876.995622 
format error: None 
execution error: None 

new run: 1668575877.8889432 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668575879.2677 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668575880.4377651 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668575900.652648 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668575901.810566 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668576333.3897548 
format error: None 
execution error:  

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score

model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668576334.8637629 
format error: None 
execution error: None 
print(np.sum(y_out))
new run: 1668576341.794334 
format error: None 
execution error: None 
print(y_train)
new run: 1668576352.6158679 
format error: None 
execution error: None 
print(np.sum(y_train))
new run: 1668576357.9983602 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score

new run: 1668576632.3119528 
format error: None 
execution error: None 

import pandas as pd
import numpy as np
new run: 1668576674.760231 
format error: None 
execution error: Error tokenizing data. C error: Calling read(nbytes) on source failed. Try engine='python'. 

training = pd.read_csv('../archive/Combined_Flights_2018.csv')
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668576675.660106 
format error: None 
execution error: name 'testing' is not defined 

testing
new run: 1668576676.545624 
format error: None 
execution error: name 'training' is not defined 
training
new run: 1668576824.228159 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv')
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668576867.6158369 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668576868.756973 
format error: None 
execution error: None 


dropped_column = ['ArrDel15', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668576972.3154922 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668576973.398808 
format error: None 
execution error: None 

training.keys()
new run: 1668576974.33041 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668577036.492299 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668577037.4973938 
format error: None 
execution error: None 

testing.keys()
new run: 1668577040.1174169 
format error: None 
execution error: name 'one_hot' is not defined 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668577040.997765 
format error: None 
execution error: name 'one_hot' is not defined 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668577041.886792 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668577043.291914 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668577045.1292741 
format error: None 
execution error: blocks must be 2-D 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668577046.474335 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668577047.560441 
format error: None 
execution error: name 'X_train' is not defined 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668577049.025242 
format error: None 
execution error: None 
print(np.sum(y_train))
new run: 1668577050.2729 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score

new run: 1668577051.233383 
format error: None 
execution error: name 'X_train' is not defined 

model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668577052.2288551 
format error: None 
execution error: name 'y_out' is not defined 
print(np.sum(y_out))
new run: 1668577192.500862 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668577193.449464 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668577194.5590022 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668577195.543345 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668577215.335691 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668577216.40537 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668577217.4307818 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668577218.36246 
format error: None 
execution error: None 
print(np.sum(y_train))
new run: 1668577219.209402 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score

new run: 1668577726.747019 
format error: None 
execution error:  

model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668577727.876244 
format error: None 
execution error: name 'y_out' is not defined 
print(np.sum(y_out))
new run: 1668578031.624921 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668578058.2541509 
format error: None 
execution error: None 

np.max(y_test)
new run: 1668578119.1209211 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668578159.7308311 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668578229.594235 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score

new run: 1668578303.026689 
format error: None 
execution error:  

model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668578390.963754 
format error: None 
execution error: name 'LinearRegression' is not defined 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
new run: 1668578394.3927748 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668578395.78058 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
new run: 1668578476.298195 
format error: None 
execution error:  

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668578526.72175 
format error: None 
execution error: 'coo_matrix' object is not subscriptable 

idx = np.random.choice(np.arange(len(y_train)), 10000, replace=False)
x_sample = X_train[idx]
y_sample = y_train[idx]
new run: 1668578745.6162329 
format error: None 
execution error:  

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)
new run: 1668578753.2760599 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668578754.1206982 
format error: None 
execution error: None 


dropped_column = ['ArrDel15', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668578754.96825 
format error: None 
execution error: None 

import pandas as pd
import numpy as np
new run: 1668578912.373024 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)
new run: 1668578914.102239 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668578915.034683 
format error: None 
execution error: None 


dropped_column = ['ArrDel15', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668578917.112833 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668578918.099042 
format error: None 
execution error: None 

training.keys()
new run: 1668578919.025111 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668578921.867937 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668578922.777306 
format error: None 
execution error: None 

testing.keys()
new run: 1668578924.471228 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668578925.4160619 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668578926.396385 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668578927.260303 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668578928.424243 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668578929.563811 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668578930.534168 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668578931.47491 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668578932.901622 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668578933.8292139 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668578936.807404 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668578937.767503 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668578938.6545112 
format error: None 
execution error: None 
print(np.sum(y_out))
new run: 1668579310.072266 
format error: None 
execution error: None 
print(np.sum(y_out == 0))
new run: 1668579326.8541539 
format error: None 
execution error: None 
plt.hist(y_out, bins=9)
new run: 1668579347.617656 
format error: None 
execution error: None 
plt.hist(y_out, bins=100)
new run: 1668579405.433915 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668579409.500917 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668579412.2617369 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668579416.433442 
format error: None 
execution error: None 


col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

#col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668579419.6806881 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668579422.768972 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668579425.281934 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668579429.2311392 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668579431.913265 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668579434.1256242 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668579438.47731 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668579442.6373818 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668579445.3954618 
format error: None 
execution error: None 
plt.hist(y_out, bins=100)
new run: 1668579503.957591 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668579504.944928 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668579506.022607 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668579507.444129 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668579510.483264 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668579511.715353 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668579514.873208 
format error: None 
execution error: None 


new run: 1668579515.882085 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668579516.840606 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668579517.861859 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668579518.748354 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668579523.315827 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668579525.694852 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668579533.787946 
format error: None 
execution error: None 
plt.hist(y_out, bins=100)
new run: 1668579564.5653372 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDelayMinutes']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668579566.564527 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668579568.3128252 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668579569.769163 
format error: None 
execution error: None 


new run: 1668579571.196033 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668579572.0718699 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668579573.0749419 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668579579.128397 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668579583.146782 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668579591.976696 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668579593.539805 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668579596.399266 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668579597.726455 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDelayMinutes']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668579600.838905 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668579601.966602 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668579603.907246 
format error: None 
execution error: None 


new run: 1668579604.802423 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668579606.5770109 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668579607.680041 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668579608.576295 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668579613.6778188 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668579614.573728 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668579655.309233 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668579656.187131 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668579657.456319 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668579659.876159 
format error: None 
execution error: None 


col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

#col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDelayMinutes']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668579662.658946 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668579665.764406 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668579668.7476149 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668579671.258313 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668579673.059006 
format error: None 
execution error: None 
import matplotlib.pyplot as plt
plt.hist(y_test, bins=9)
new run: 1668579675.588823 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668579679.611804 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668579680.472495 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668579737.1110442 
format error: None 
execution error: None 

X_train = training['DepDelayMinutes'].to_numpy().reshape(-1, 1)
y_train = testing['DepDelayMinutes'].to_numpy().reshape(-1, 1)
new run: 1668579740.814921 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668579753.7349162 
format error: None 
execution error: None 

X_train = training['DepDelayMinutes'].to_numpy().reshape(-1, 1)
X_test = testing['DepDelayMinutes'].to_numpy().reshape(-1, 1)
new run: 1668579755.7898822 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668579757.8418171 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668579760.901016 
format error: None 
execution error: None 

y_test[y_test > 500] = 500
y_train[y_train > 500] = 500
new run: 1668579767.105152 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668579768.840184 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668579861.5892339 
format error: None 
execution error: None 


dropped_column = ['ArrDelayMinutes', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668585683.849526 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)
new run: 1668585685.914695 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668585687.219171 
format error: None 
execution error: None 


dropped_column = ['ArrDelayMinutes', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668585689.272821 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668619947.628473 
format error: None 
execution error: None 

import pandas as pd
import numpy as np
new run: 1668620097.3591008 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)
new run: 1668620099.554771 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668620100.43904 
format error: None 
execution error: None 


dropped_column = ['ArrDelayMinutes', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668620102.561839 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668620103.66158 
format error: None 
execution error: None 

training.keys()
new run: 1668620104.629577 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668620107.489181 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668620108.472666 
format error: None 
execution error: None 

testing.keys()
new run: 1668620111.2437608 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668620112.110686 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668620113.031334 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668620114.0865622 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668620115.373853 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668620116.441903 
format error: None 
execution error: 'ArrDelayMinutes' 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668620117.2325828 
format error: None 
execution error: None 

y_train = training['ArrDel15'].to_numpy().reshape(-1)
y_test = testing['ArrDel15'].to_numpy().reshape(-1)
new run: 1668620118.316761 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668620119.508435 
format error: None 
execution error: name 'RandomForestClassifier' is not defined 


model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668620121.6491258 
format error: None 
execution error: name 'model' is not defined 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668620122.5522099 
format error: None 
execution error: name 'y_out' is not defined 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668620351.624303 
format error: None 
execution error: None 

X_train = training['DepDel15'].to_numpy().reshape(-1, 1)
X_test = testing['DepDel15'].to_numpy().reshape(-1, 1)
new run: 1668620355.081866 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668620362.479402 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668620384.601127 
format error: None 
execution error: name 'RandomForestClassifier' is not defined 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668620389.756515 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668620404.56607 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
new run: 1668620412.067327 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668620454.787673 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668620457.088861 
format error: None 
execution error: name 'confusion_matrix' is not defined 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668620522.870059 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay, confusion_matrix
new run: 1668620529.9563332 
format error: None 
execution error: name 'plt' is not defined 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
plt.show()
new run: 1668620540.6770291 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668620549.0925188 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668620643.9238322 
format error: None 
execution error: None 

X_train = training['DepDelayMinutes'].to_numpy().reshape(-1, 1)
X_test = testing['DepDelayMinutes'].to_numpy().reshape(-1, 1)
new run: 1668620691.3719099 
format error: None 
execution error: None 

X_train = training['DepDelayMinutes'].to_numpy().reshape(-1, 1)
X_test = testing['DepDelayMinutes'].to_numpy().reshape(-1, 1)
new run: 1668620697.809589 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay, confusion_matrix
new run: 1668620706.5415292 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668620710.592685 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668620713.738709 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668620744.9930959 
format error: None 
execution error: None 

X_train = training['DepTime'].to_numpy().reshape(-1, 1)
X_test = testing['DepTime'].to_numpy().reshape(-1, 1)
new run: 1668620754.83441 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668620769.2558222 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668620773.924088 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668620777.174817 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668620832.3529248 
format error: None 
execution error: ('DepDel15', 'DepDelayMinutes', 'DepTime') 

X_train = training['DepDel15', 'DepDelayMinutes', 'DepTime'].to_numpy()
X_test = testing['DepDel15', 'DepDelayMinutes', 'DepTime'].to_numpy()
new run: 1668620855.8609228 
format error: None 
execution error: Too many indexers 

X_train = training.loc['DepDel15', 'DepDelayMinutes', 'DepTime'].to_numpy()
X_test = testing.loc['DepDel15', 'DepDelayMinutes', 'DepTime'].to_numpy()
new run: 1668620924.4657989 
format error: None 
execution error: None 

X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
new run: 1668620928.048811 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668620940.154381 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668620944.365257 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668620947.635901 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668620986.52615 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668620990.446309 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668620991.940486 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668620993.615222 
format error: None 
execution error: None 


col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

#col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668620997.137443 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668621005.3415082 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668621018.771096 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668621058.492723 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668621060.911594 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668621224.8461728 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668621247.1762052 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668621248.329688 
format error: None 
execution error: None 


dropped_column = ['ArrDelayMinutes', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668621719.922411 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668621721.0806882 
format error: None 
execution error: None 

training.keys()
new run: 1668621722.5035279 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668621763.345679 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668621764.458251 
format error: None 
execution error: None 

testing.keys()
new run: 1668621780.206281 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668621781.231946 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668621782.6638012 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668621783.750483 
format error: None 
execution error: None 


col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

#col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668621791.804663 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668621792.753244 
format error: None 
execution error: None 

y_train = training['ArrDel15'].to_numpy().reshape(-1)
y_test = testing['ArrDel15'].to_numpy().reshape(-1)
new run: 1668621794.0425248 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668621802.929162 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668621912.4392772 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668621915.020191 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668622612.740461 
format error: None 
execution error: None 

X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
new run: 1668622632.5414789 
format error: None 
execution error: None 


#model = RandomForestClassifier(max_samples = 0.01, min_samples_leaf = 100)
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668622718.337027 
format error: None 
execution error: None 

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668622720.7431371 
format error: None 
execution error: None 

from sklearn.metrics import accuracy_score

print(accuracy_score(y_test, y_out))
new run: 1668626793.299993 
format error: None 
execution error:  

y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668626929.947406 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv')
new run: 1668626954.5065951 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668626955.699331 
format error: None 
execution error: None 


dropped_column = ['ArrDelayMinutes', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668627007.9268968 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668627009.031132 
format error: None 
execution error: None 

training.keys()
new run: 1668627010.1257741 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668627045.595554 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668627046.467385 
format error: None 
execution error: None 

testing.keys()
new run: 1668627062.624139 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668627063.640801 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668627064.6503181 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668627065.661624 
format error: None 
execution error: None 


col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

#col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668627074.3557692 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668627075.278624 
format error: None 
execution error: None 

y_train = training['ArrDel15'].to_numpy().reshape(-1)
y_test = testing['ArrDel15'].to_numpy().reshape(-1)
new run: 1668627076.957355 
format error: None 
execution error: None 

X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
new run: 1668627078.262311 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668627093.658875 
format error: None 
execution error:  

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)
new run: 1668627098.890836 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668627100.1021922 
format error: None 
execution error: None 


dropped_column = ['ArrDelayMinutes', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668627101.099494 
format error: None 
execution error: "['ArrDelayMinutes'] not found in axis" 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668627102.072309 
format error: None 
execution error: None 

training.keys()
new run: 1668627103.2079518 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668627104.2342489 
format error: None 
execution error: "['FlightDate'] not found in axis" 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668627105.2565 
format error: None 
execution error: None 

testing.keys()
new run: 1668627121.366406 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668627122.760583 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668627124.038259 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668627305.330241 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)
new run: 1668627307.439531 
format error: None 
execution error: None 


training = training.dropna()
testing = testing.dropna()
new run: 1668627308.800278 
format error: None 
execution error: None 


dropped_column = ['ArrDel15', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668627310.852127 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
    
new run: 1668627312.070627 
format error: None 
execution error: None 

training.keys()
new run: 1668627315.33552 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number']
new run: 1668627316.922009 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668627317.909944 
format error: None 
execution error: None 

testing.keys()
new run: 1668627320.5639129 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668627321.411605 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668627322.417214 
format error: None 
execution error: None 

from scipy.sparse import hstack
new run: 1668627323.246596 
format error: None 
execution error: None 


col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

#col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668627324.408282 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668627325.3583848 
format error: None 
execution error: 'ArrDel15' 

y_train = training['ArrDel15'].to_numpy().reshape(-1)
y_test = testing['ArrDel15'].to_numpy().reshape(-1)
new run: 1668627376.7395031 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668627381.429827 
format error: None 
execution error: None 

X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
new run: 1668627386.7209501 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668627428.046775 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668627435.307751 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay, confusion_matrix
new run: 1668627443.50173 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668627444.599902 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668627446.26524 
format error: None 
execution error: name 'plt' is not defined 
plt.hist(y_out, bins=100)
new run: 1668627472.620283 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay, confusion_matrix
import matplotlib.pyplot as plt
new run: 1668627477.827369 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668627481.5727491 
format error: None 
execution error: None 
plt.hist(y_out, bins=100)
new run: 1668627583.1996422 
format error: None 
execution error: None 

#X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
#X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()

X_train = training.loc[:, ['DepDel15']].to_numpy()
X_test = testing.loc[:, ['DepDel15']].to_numpy()
new run: 1668627587.202087 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668627591.878508 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668627593.814564 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668627595.761929 
format error: None 
execution error: None 
plt.hist(y_out, bins=100)
new run: 1668627626.9222422 
format error: None 
execution error: None 

#X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
#X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()

X_train = training.loc[:, ['DepTime']].to_numpy()
X_test = testing.loc[:, ['DepTime']].to_numpy()
new run: 1668627629.752182 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668627633.694583 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668627641.387281 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668627642.418405 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668627663.360285 
format error: None 
execution error: None 

#X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
#X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()

X_train = training.loc[:, ['DepDelayMinutes']].to_numpy()
X_test = testing.loc[:, ['DepDelayMinutes']].to_numpy()
new run: 1668627665.4984052 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668627671.062628 
format error: None 
execution error: None 

# REGRESSION TEST

from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay, confusion_matrix
import matplotlib.pyplot as plt
new run: 1668627673.566785 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668627675.8437362 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668627737.0927548 
format error: None 
execution error: None 

X_train = training.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()
X_test = testing.loc[:, ['DepDel15', 'DepDelayMinutes', 'DepTime']].to_numpy()

#X_train = training.loc[:, ['DepDelayMinutes']].to_numpy()
#X_test = testing.loc[:, ['DepDelayMinutes']].to_numpy()
new run: 1668627739.781558 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668627746.718567 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668627747.959577 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668627750.999111 
format error: None 
execution error: None 
plt.hist(y_out, bins=100)
new run: 1668627827.080462 
format error: None 
execution error: None 

from sklearn.preprocessing import OneHotEncoder

encode = OneHotEncoder(handle_unknown = 'ignore')

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'DayOfWeek', 'Month', 'Quarter', 'Dest', 'Origin', 'Airline' ]

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encode.fit_transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    print(x.shape)
    array.append(x)
    array_test.append(y)
new run: 1668627830.1885161 
format error: None 
execution error: None 

not_hot = []
for key in training.keys():
    if key not in one_hot:
        not_hot.append(key)
        
print(not_hot)
new run: 1668627833.7489338 
format error: None 
execution error: None 


#col_2 = ['CRSDepTime', 'DepTime', 'DepDelayMinutes', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

col_2 = ['CRSDepTime', 'DepTime', 'CRSElapsedTime', 'Distance', 'DayofMonth', 'DepDel15']

for col in col_2:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)
    
new run: 1668627838.621655 
format error: None 
execution error: None 

X_train = hstack(array)
X_test = hstack(array_test)
new run: 1668627840.160579 
format error: None 
execution error: None 

y_train = training['ArrDelayMinutes'].to_numpy().reshape(-1)
y_test = testing['ArrDelayMinutes'].to_numpy().reshape(-1)
new run: 1668627844.330098 
format error: None 
execution error: None 

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668627851.973459 
format error: None 
execution error: None 

#model = RandomForestRegressor(max_samples = 0.01, min_samples_leaf = 100)
model = LinearRegression()
model.fit(X_train, y_train)
new run: 1668627853.670115 
format error: None 
execution error: None 

y_out = model.predict(X_test)
print(explained_variance_score(y_test, y_out))
new run: 1668709355.600296 
format error: None 
execution error: name 'pd' is not defined 
training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)

new run: 1668709483.069209 
format error: None 
execution error: None 

import pandas as pd

new run: 1668709564.363909 
format error: None 
execution error:  
training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)

new run: 1668709565.972359 
format error: None 
execution error: name 'testing' is not defined 

training = training.dropna()
testing = testing.dropna()



new run: 1668709567.0863519 
format error: None 
execution error: None 

dropped_column = ['ArrDel15', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668709714.428021 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(1000000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(1000000)
new run: 1668709722.227277 
format error: None 
execution error: None 

training = training.dropna()
testing = testing.dropna()



new run: 1668709723.3072572 
format error: None 
execution error: None 

dropped_column = ['ArrDel15', 'Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepDelay', 'ArrTime', 'AirTime', 'ActualElapsedTime', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668710195.994117 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(1000000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(1000000)
new run: 1668710211.1194801 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668710218.45364 
format error: None 
execution error: None 


training.keys()
new run: 1668710223.3741171 
format error: None 
execution error: None 


training
new run: 1668710308.469287 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
new run: 1668710335.824362 
format error: None 
execution error: None 


training
new run: 1668710351.648051 
format error: None 
execution error: None 


training.keys()
new run: 1668710667.8009658 
format error: None 
execution error: None 


training['CRSDepTime'].unique()
new run: 1668710745.4148638 
format error: None 
execution error: None 
training = training.sort_values(['Month', 'DayofMonth', 'CRSDepTime'])
testing = testing.sort_values(['Month', 'DayofMonth', 'CRSDepTime'])
new run: 1668710767.025507 
format error: None 
execution error: None 

training
new run: 1668710799.105788 
format error: None 
execution error: None 

dropped_column = ['Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepTime', 'DepDelay', 'ArrTime', 'ArrDelayMinutes', 'AirTime', 'ActualElapsedTime', 'DepDelayMinutes', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrDel15', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668710800.8186119 
format error: None 
execution error: "['Flight_Number_Marketing_Airline'] not found in axis" 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668710995.402229 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(1000000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(1000000)
new run: 1668711004.291351 
format error: None 
execution error: None 

training = training.dropna()
testing = testing.dropna()



new run: 1668711005.7683399 
format error: None 
execution error: None 

dropped_column = ['Flight_Number_Marketing_Airline', 'Flight_Number_Operating_Airline', 'DepTime', 'DepDelay', 'ArrTime', 'ArrDelayMinutes', 'AirTime', 'ActualElapsedTime', 'DepDelayMinutes', 'DepartureDelayGroups', 'DepTimeBlk', 'TaxiOut', 'WheelsOff', 'WheelsOn', 'TaxiIn', 'ArrDelay', 'ArrDel15', 'ArrivalDelayGroups', 'ArrTimeBlk', 'DistanceGroup', 'DivAirportLandings']


new run: 1668711021.280365 
format error: None 
execution error: None 

for column in dropped_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668711483.3589 
format error: None 
execution error: None 
training = training.sort_values(['Month', 'DayofMonth', 'CRSDepTime'])
testing = testing.sort_values(['Month', 'DayofMonth', 'CRSDepTime'])
new run: 1668711498.998213 
format error: None 
execution error: None 

training
new run: 1668711659.447305 
format error: None 
execution error: None 

training.keys()
new run: 1668711717.4956238 
format error: None 
execution error: None 

d2_column = ['FlightDate', 'Marketing_Airline_Network', 'Operated_or_Branded_Code_Share_Partners' ,  'DOT_ID_Marketing_Airline', 'IATA_Code_Marketing_Airline', 'DOT_ID_Operating_Airline', 'IATA_Code_Operating_Airline', 'OriginAirportSeqID', 'DestAirportSeqID', 'CRSArrTime', 'DestStateName', 'DestState', 'DestCityName', 'OriginStateName', 'OriginState', 'OriginCityName','Year',  'Diverted', 'Cancelled', 'Tail_Number', 'Quarter',  'DayOfWeek', ]
new run: 1668711782.502354 
format error: None 
execution error: None 

for column in d2_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
    
new run: 1668711798.9458182 
format error: None 
execution error: None 

testing.keys()
new run: 1668711887.629385 
format error: None 
execution error: None 

encoders = {}

one_hot = ['DestWac', 'DestStateFips', 'DestCityMarketID', 'DestAirportID', 'OriginWac', 'OriginStateFips', 'OriginCityMarketID', 'OriginAirportID', 'Operating_Airline', 'Dest', 'Origin', 'Airline' ]
new run: 1668711936.813768 
format error: None 
execution error: name 'OneHotEncoder' is not defined 

for hot in one_hot:
    encode = OneHotEncoder(handle_unknown = 'ignore')
    encode.fit(training[hot].to_numpy().reshape(-1, 1))
    encoders[hot] = encode
new run: 1668711944.743705 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
from sklearn.preprocessing import OneHotEncoder
new run: 1668711949.251298 
format error: None 
execution error: None 

for hot in one_hot:
    encode = OneHotEncoder(handle_unknown = 'ignore')
    encode.fit(training[hot].to_numpy().reshape(-1, 1))
    encoders[hot] = encode
new run: 1668712699.293571 
format error: None 
execution error: None 

training.reset_index()
testing.reset_index()
new run: 1668714325.689246 
format error: invalid syntax (<ipython-input-37-fb79f7108052>, line 19) 
execution error: None 

def get_previous_rows(df, current_row_index, previous_rows_num = 50):
    ''' Given a sorted pandas dataframe and row index, return previous rows
    
    df: dataframe, eg. the training dataset
    current_row_index: row index to get previous rows from
    previous_rows_num: 
    
    
    '''
    if previous_rows_num <= 0:
        raise ValueError('invalid row number')
    index = current_row_index - previous_rows_num
    if index < 0:
        raise ValueError('current_row_index less than previous_rows_num')
    subset = df.iloc[index:current_row_index]
    return subset


month_days = {1: 31, 2: 29, 3: 31, 4:30, 5:31, 6:30 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}


def _get_previous_days(num, month, day):
    last = (month, day)
    previous_days = [last]
    for i in range(num - 1):
        m, d = previous_days[-1]
        if d == 1:
            m -= 1
            if m == 0:
                raise ValueError('previous days not in dataset')
            d = month_days[m]
        else:
            d -= 1
        
        previous_days.append((d, m))



def get_previous_days(df, current_row_index, previous_days = 14):
    ''' Given a sorted pandas dataframe with columns 'Month', 'DayofMonth', 'CRSDepTime', and a row index, 
    return the rows that are 'previous_days' days before 'df.iloc[current_row_index]'
    
    Note: this includes flights on the current day that have an estimated departure time BEFORE the df.iloc[current_row_index]
    
    df: dataframe, eg. training dataset
    current_row_index: row index to evaluate
    previous_days: number of days prior to row, counting current one
    
    '''
    raise NotImplemented()
    

new run: 1668714331.706452 
format error: None 
execution error: None 

def get_previous_rows(df, current_row_index, previous_rows_num = 50):
    ''' Given a sorted pandas dataframe and row index, return previous rows
    
    df: dataframe, eg. the training dataset
    current_row_index: row index to get previous rows from
    previous_rows_num: 
    
    
    '''
    if previous_rows_num <= 0:
        raise ValueError('invalid row number')
    index = current_row_index - previous_rows_num
    if index < 0:
        raise ValueError('current_row_index less than previous_rows_num')
    subset = df.iloc[index:current_row_index]
    return subset


month_days = {1: 31, 2: 29, 3: 31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}


def _get_previous_days(num, month, day):
    last = (month, day)
    previous_days = [last]
    for i in range(num - 1):
        m, d = previous_days[-1]
        if d == 1:
            m -= 1
            if m == 0:
                raise ValueError('previous days not in dataset')
            d = month_days[m]
        else:
            d -= 1
        
        previous_days.append((d, m))



def get_previous_days(df, current_row_index, previous_days = 14):
    ''' Given a sorted pandas dataframe with columns 'Month', 'DayofMonth', 'CRSDepTime', and a row index, 
    return the rows that are 'previous_days' days before 'df.iloc[current_row_index]'
    
    Note: this includes flights on the current day that have an estimated departure time BEFORE the df.iloc[current_row_index]
    
    df: dataframe, eg. training dataset
    current_row_index: row index to evaluate
    previous_days: number of days prior to row, counting current one
    
    '''
    raise NotImplemented()
    

new run: 1668714364.866025 
format error: None 
execution error: None 

print(training.keys())
new run: 1668714478.203359 
format error: None 
execution error: None 

d3_column = ['Month', 'DayofMonth']


for column in d3_column:
    training = training.drop(column, axis = 1)
    testing = testing.drop(column, axis = 1)
new run: 1668732948.99246 
format error: None 
execution error: invalid literal for int() with base 10: 'Air Wisconsin Airlines Corp' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encoders[hot].transform(training[hot].to_numpy().reshape(-1, 1))
    y = encode.transform(testing[hot].to_numpy().reshape(-1, 1))
    array.append(x)
    array_test.append(y)

for col in not_hot:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)

X_train = hstack(array)
X_test = hstack(array_test)
y_train = training['DepDel15'].to_numpy().reshape(-1)
y_test = testing['DepDel15'].to_numpy().reshape(-1)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668733012.420296 
format error: None 
execution error: None 

print(testing['DestWac'])
new run: 1668733040.343434 
format error: None 
execution error: 'Series' object has no attribute 'uniques' 

print(testing['DestWac'].uniques())
new run: 1668733043.943802 
format error: None 
execution error: None 

print(testing['DestWac'].unique())
new run: 1668733061.23865 
format error: None 
execution error: name 'hstack' is not defined 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encoders[hot].transform(training[hot].to_numpy().reshape(-1, 1))
    y = encoders[hot].transform(testing[hot].to_numpy().reshape(-1, 1))
    array.append(x)
    array_test.append(y)

for col in not_hot:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)

X_train = hstack(array)
X_test = hstack(array_test)
y_train = training['DepDel15'].to_numpy().reshape(-1)
y_test = testing['DepDel15'].to_numpy().reshape(-1)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668733078.463922 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
from sklearn.preprocessing import OneHotEncoder
from scipy.sparse import hstack
new run: 1668733089.047147 
format error: None 
execution error: None 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']

array = []
array_test = []
for hot in one_hot:
    print(hot)
    x = encoders[hot].transform(training[hot].to_numpy().reshape(-1, 1))
    y = encoders[hot].transform(testing[hot].to_numpy().reshape(-1, 1))
    array.append(x)
    array_test.append(y)

for col in not_hot:
    x = training[col].to_numpy().reshape(-1, 1)
    y = testing[col].to_numpy().reshape(-1, 1)
    array.append(x)
    array_test.append(y)

X_train = hstack(array)
X_test = hstack(array_test)
y_train = training['DepDel15'].to_numpy().reshape(-1)
y_test = testing['DepDel15'].to_numpy().reshape(-1)

print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)
new run: 1668733161.5646799 
format error: None 
execution error: name 'np' is not defined 

X_train_time = np.zeros((980430, 2436*2 + 1))
X_test_time = np.zeros((978592, 2436*2 + 1))
new run: 1668733172.094244 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
from sklearn.preprocessing import OneHotEncoder
from scipy.sparse import hstack
import numpy as np
new run: 1668733177.049809 
format error: None 
execution error: None 

X_train_time = np.zeros((980430, 2436*2 + 1))
X_test_time = np.zeros((978592, 2436*2 + 1))
new run: 1668733981.645563 
format error: None 
execution error: None 

X_train_time = np.zeros((980430 - 20, 2436*2 + 1))
X_test_time = np.zeros((978592 - 20, 2436*2 + 1))
new run: 1668737986.1567628 
format error: None 
execution error: 'coo_matrix' object is not subscriptable 

temp = np.sum(X_train[0:20], axis = 0)
print(temp.shape)
X_train_time[0, 0:2436] = temp
temp = np.sum(Y_train[0:20], axis = 0)
print(temp.shape)
X_train_time[0, 2436] = temp
X_train_time[0, 2437:] = X_train[0]
new run: 1668738029.0105548 
format error: None 
execution error: 'coo_matrix' object is not subscriptable 

temp = np.sum(X_train[0], axis = 0)
print(temp.shape)
# X_train_time[0, 0:2436] = temp
# temp = np.sum(Y_train[0:20], axis = 0)
# print(temp.shape)
# X_train_time[0, 2436] = temp
# X_train_time[0, 2437:] = X_train[0]
new run: 1668738431.683845 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
from sklearn.preprocessing import OneHotEncoder
from scipy.sparse import hstack,vstack
import numpy as np
new run: 1668738609.310526 
format error: None 
execution error: current_row_index less than previous_rows_num 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df):
    array = []
    for hot in one_hot:
        x = encoders[hot].transform(sub_df[hot].to_numpy().reshape(-1, 1))
        array.append(x)

    for col in not_hot:
        x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668738642.369631 
format error: None 
execution error: None 

def get_previous_rows(df, current_row_index, previous_rows_num = 10):
    ''' Given a sorted pandas dataframe and row index, return previous rows
    
    df: dataframe, eg. the training dataset
    current_row_index: row index to get previous rows from
    previous_rows_num: 
    
    
    '''
    if previous_rows_num <= 0:
        raise ValueError('invalid row number')
    index = current_row_index - previous_rows_num
    print(index)
    if index < 0:
        raise ValueError('current_row_index less than previous_rows_num')
    subset = df.iloc[index:current_row_index]
    return subset


month_days = {1: 31, 2: 29, 3: 31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}


def _get_previous_days(num, month, day):
    last = (month, day)
    previous_days = [last]
    for i in range(num - 1):
        m, d = previous_days[-1]
        if d == 1:
            m -= 1
            if m == 0:
                raise ValueError('previous days not in dataset')
            d = month_days[m]
        else:
            d -= 1
        
        previous_days.append((d, m))



def get_previous_days(df, current_row_index, previous_days = 14):
    ''' Given a sorted pandas dataframe with columns 'Month', 'DayofMonth', 'CRSDepTime', and a row index, 
    return the rows that are 'previous_days' days before 'df.iloc[current_row_index]'
    
    Note: this includes flights on the current day that have an estimated departure time BEFORE the df.iloc[current_row_index]
    
    df: dataframe, eg. training dataset
    current_row_index: row index to evaluate
    previous_days: number of days prior to row, counting current one
    
    '''
    raise NotImplemented()
    

new run: 1668738643.473778 
format error: None 
execution error: None 

new run: 1668738648.329568 
format error: None 
execution error: blocks[0,:] has incompatible row dimensions. Got blocks[0,1].shape[0] == 1, expected 10. 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df):
    array = []
    for hot in one_hot:
        x = encoders[hot].transform(sub_df[hot].to_numpy().reshape(-1, 1))
        array.append(x)

    for col in not_hot:
        x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668738679.1507561 
format error: None 
execution error: blocks[0,:] has incompatible row dimensions. Got blocks[0,1].shape[0] == 1, expected 10. 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df):
    array = []
    for hot in one_hot:
        x = encoders[hot].transform(sub_df[hot].to_numpy().reshape(-1, 1))
        array.append(x)

    for col in not_hot:
        x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    print(prev_X, prev_Y)
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668738695.655757 
format error: None 
execution error: blocks[0,:] has incompatible row dimensions. Got blocks[0,1].shape[0] == 1, expected 10. 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df):
    array = []
    for hot in one_hot:
        x = encoders[hot].transform(sub_df[hot].to_numpy().reshape(-1, 1))
        array.append(x)

    for col in not_hot:
        x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    print(prev_X.shape)
    print(prev_Y.shape)
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668738757.7320802 
format error: None 
execution error: 'numpy.int64' object has no attribute 'to_numpy' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df):
    array = []
    for hot in one_hot:
        x = encoders[hot].transform(sub_df[hot].to_numpy().reshape(-1, 1))
        array.append(x)

    for col in not_hot:
        x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)
    print(prev_X.shape)
    print(prev_Y.shape)
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668738784.048508 
format error: None 
execution error: None 

def get_previous_rows(df, current_row_index, previous_rows_num = 10):
    ''' Given a sorted pandas dataframe and row index, return previous rows
    
    df: dataframe, eg. the training dataset
    current_row_index: row index to get previous rows from
    previous_rows_num: 
    
    
    '''
    if previous_rows_num <= 0:
        raise ValueError('invalid row number')
    index = current_row_index - previous_rows_num
    if index < 0:
        raise ValueError('current_row_index less than previous_rows_num')
    subset = df.iloc[index:current_row_index]
    return subset


month_days = {1: 31, 2: 29, 3: 31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}


def _get_previous_days(num, month, day):
    last = (month, day)
    previous_days = [last]
    for i in range(num - 1):
        m, d = previous_days[-1]
        if d == 1:
            m -= 1
            if m == 0:
                raise ValueError('previous days not in dataset')
            d = month_days[m]
        else:
            d -= 1
        
        previous_days.append((d, m))



def get_previous_days(df, current_row_index, previous_days = 14):
    ''' Given a sorted pandas dataframe with columns 'Month', 'DayofMonth', 'CRSDepTime', and a row index, 
    return the rows that are 'previous_days' days before 'df.iloc[current_row_index]'
    
    Note: this includes flights on the current day that have an estimated departure time BEFORE the df.iloc[current_row_index]
    
    df: dataframe, eg. training dataset
    current_row_index: row index to evaluate
    previous_days: number of days prior to row, counting current one
    
    '''
    raise NotImplemented()
    

new run: 1668738786.8916202 
format error: None 
execution error: 'numpy.int64' object has no attribute 'to_numpy' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df):
    array = []
    for hot in one_hot:
        x = encoders[hot].transform(sub_df[hot].to_numpy().reshape(-1, 1))
        array.append(x)

    for col in not_hot:
        x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668738969.25839 
format error: None 
execution error: no supported conversion for types: (dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('O'), dtype('O'), dtype('O')) 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)

    for col in not_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668738970.811945 
format error: None 
execution error: None 

X_train_time = np.zeros((980430 - 20, 2436*2 + 1))
X_test_time = np.zeros((978592 - 20, 2436*2 + 1))
new run: 1668738982.8424902 
format error: None 
execution error: no supported conversion for types: (dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('O'), dtype('O'), dtype('O')) 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)

    for col in not_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739031.999748 
format error: None 
execution error: no supported conversion for types: (dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('O'), dtype('O'), dtype('O')) 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        print(x.shape)
        array.append(x)

    for col in not_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        print(x.shape)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739072.5649228 
format error: None 
execution error: no supported conversion for types: (dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('O'), dtype('O'), dtype('O')) 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    print('hello')
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        print(x.shape)
        array.append(x)

    for col in not_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        print(x.shape)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739094.6739352 
format error: None 
execution error: no supported conversion for types: (dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('O'), dtype('O'), dtype('O')) 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    print('hello')
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        print(x)
        array.append(x)

    for col in not_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        print(x)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739127.439702 
format error: None 
execution error: no supported conversion for types: (dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('float64'), dtype('O'), dtype('O'), dtype('O')) 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    print('hello')
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        print(x)
        array.append(x)
    print('hello')
    for col in not_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        print(x)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739169.165181 
format error: None 
execution error: 'numpy.int64' object has no attribute 'to_numpy' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    print('hello')
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        print(x)
        array.append(x)
    print('hello')
    for col in not_hot:
        print(col)
        if is_scalar:
            x = sub_df[col].reshape(-1, 1)
        else:
            x = sub_df[col].to_numpy().reshape(-1, 1)
        print(x)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index])
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739207.816064 
format error: None 
execution error: 'str' object has no attribute 'reshape' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)
    for col in not_hot:
        if is_scalar:
            x = sub_df[col].reshape(-1, 1)
        else:
            x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index], is_scalar = True)
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739226.837762 
format error: None 
execution error: 'str' object has no attribute 'reshape' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)
    for col in not_hot:
        print(x)
        if is_scalar:
            x = sub_df[col].reshape(-1, 1)
        else:
            x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index], is_scalar = True)
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739247.2724428 
format error: None 
execution error: 'str' object has no attribute 'reshape' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)
    for col in not_hot:
        print(x)
        print(type(x))
        if is_scalar:
            x = sub_df[col].reshape(-1, 1)
        else:
            x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index], is_scalar = True)
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739268.379605 
format error: None 
execution error: 'str' object has no attribute 'reshape' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        if is_scalar:
            x = sub_df[hot].reshape(-1, 1)
        else:
            x = sub_df[hot].to_numpy().reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)
    for col in not_hot:
        print(sub_df[col])
        print(type(sub_df[col]))
        if is_scalar:
            x = sub_df[col].reshape(-1, 1)
        else:
            x = sub_df[col].to_numpy().reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index], is_scalar = True)
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739398.591603 
format error: None 
execution error: 'numpy.float64' object has no attribute 'to_numpy' 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        x = np.asarray(sub_df[hot]).reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)
    for col in not_hot:
        x = np.asarray(sub_df[col]).reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = sub_df['DepDel15'].to_numpy().reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index], is_scalar = True)
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739420.346934 
format error: None 
execution error: None 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        x = np.asarray(sub_df[hot]).reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)
    for col in not_hot:
        x = np.asarray(sub_df[col]).reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = np.asarray(sub_df['DepDel15']).reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    print(prev_features.shape)
    prev_features = np.sum(prev_features, axis = 0)
    print(prev_features.shape)
    X, y = get_feature_vector(df.iloc[index], is_scalar = True)
    X = hstack([prev_features, X])
    print(X.shape)
    print(y.shape)
    return X, y


get_features_row(training, 20)
    
new run: 1668739724.133445 
format error: None 
execution error: None 

X_train_time = []
y_train_time = []
X_test_time = []
y_test_time = []

print(training.shape)
print(testing.shape)
new run: 1668739782.3625689 
format error: None 
execution error: None 

X_train = []
y_train = []
X_test = []
y_test = []

print(training.shape)
print(testing.shape)
new run: 1668739894.409746 
format error: None 
execution error:  

for i in range(20, 980430):
    X, y = get_features_row(training, i)
    X_train.append(X)
    y_train.append(y)
    
for i in range(20, 978592):
    X, y = get_features_row(testing, i)
    X_test.append(X)
    y_test.append(y)

X_train = vstack(X_train)
y_train = vstack(y_train)
X_test = vstack(X_test)
y_test = vstack(y_test)

pritn(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)
new run: 1668739928.685202 
format error: None 
execution error:  

for i in range(20, 980430):
    print('hello')
    X, y = get_features_row(training, i)
    X_train.append(X)
    y_train.append(y)
    
for i in range(20, 978592):
    X, y = get_features_row(testing, i)
    X_test.append(X)
    y_test.append(y)

X_train = vstack(X_train)
y_train = vstack(y_train)
X_test = vstack(X_test)
y_test = vstack(y_test)

print(X_train.shape)
print(y_train.shape)
print(X_test.shape)
print(y_test.shape)
new run: 1668739944.087209 
format error: None 
execution error: None 

# features: count of previous 20
not_hot = ['CRSDepTime', 'CRSElapsedTime', 'Distance']



def get_feature_vector(sub_df, is_scalar = False):
    array = []
    for hot in one_hot:
        x = np.asarray(sub_df[hot]).reshape(-1, 1)
        x = encoders[hot].transform(x)
        array.append(x)
    for col in not_hot:
        x = np.asarray(sub_df[col]).reshape(-1, 1)
        array.append(x)

    X_train = hstack(array)
    y_train = np.asarray(sub_df['DepDel15']).reshape(-1)
    
    return X_train, y_train


def get_features_row(df, index):
    prev_rows = get_previous_rows(df, index)
    prev_X, prev_Y = get_feature_vector(prev_rows)
    prev_Y = prev_Y.reshape(-1, 1)   
    prev_features = hstack([prev_X, prev_Y])
    prev_features = np.sum(prev_features, axis = 0)
    X, y = get_feature_vector(df.iloc[index], is_scalar = True)
    X = hstack([prev_features, X])
    return X, y


get_features_row(training, 20)
    
new run: 1668739952.834615 
format error: None 
execution error:  

for i in range(20, 980430):
    print('hello')
    X, y = get_features_row(training, i)
    X_train.append(X)
    y_train.append(y)
    
for i in range(20, 978592):
    X, y = get_features_row(testing, i)
    X_test.append(X)
    y_test.append(y)

X_train = vstack(X_train)
y_train = vstack(y_train)
X_test = vstack(X_test)
y_test = vstack(y_test)
new run: 1668739967.1714098 
format error: None 
execution error:  

for i in range(20, 980430):
    X, y = get_features_row(training, i)
    X_train.append(X)
    y_train.append(y)
    
for i in range(20, 978592):
    X, y = get_features_row(testing, i)
    X_test.append(X)
    y_test.append(y)

X_train = vstack(X_train)
y_train = vstack(y_train)
X_test = vstack(X_test)
y_test = vstack(y_test)
new run: 1668739981.9075918 
format error: invalid syntax (<ipython-input-89-5cd026cda608>, line 2) 
execution error: None 

for i in range(20, 980430):
    if i%1000 = 0:
        print(i)
    X, y = get_features_row(training, i)
    X_train.append(X)
    y_train.append(y)
    
for i in range(20, 978592):
    X, y = get_features_row(testing, i)
    X_test.append(X)
    y_test.append(y)

X_train = vstack(X_train)
y_train = vstack(y_train)
X_test = vstack(X_test)
y_test = vstack(y_test)
new run: 1668753884.333345 
format error: None 
execution error:  

for i in range(20, 980430):
    if i%1000 == 0:
        print(i)
    X, y = get_features_row(training, i)
    X_train.append(X)
    y_train.append(y)
    
for i in range(20, 978592):
    X, y = get_features_row(testing, i)
    X_test.append(X)
    y_test.append(y)

X_train = vstack(X_train)
y_train = vstack(y_train)
X_test = vstack(X_test)
y_test = vstack(y_test)
new run: 1668753890.577761 
format error: None 
execution error:  

X_train = []
y_train = []
X_test = []
y_test = []

print(training.shape)
print(testing.shape)
new run: 1668753941.8606389 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
from sklearn.preprocessing import OneHotEncoder
from scipy.sparse import hstack,vstack
import numpy as np
new run: 1668753965.296084 
format error: None 
execution error: 'list' object has no attribute 'shape' 

print(X_train.shape)
new run: 1668753969.928458 
format error: None 
execution error: None 

print(X_train)
new run: 1668753977.738646 
format error: None 
execution error: None 

X_train = []
y_train = []
X_test = []
y_test = []

print(training.shape)
print(testing.shape)
new run: 1668754190.5676968 
format error: None 
execution error: None 

train = np.random.choice(np.arange(20, 980430), size = 50000, replace=False)
test =  np.random.choice(np.arange(20, 978592), size = 50000, replace=False)  
new run: 1668754209.648187 
format error: None 
execution error: None 

for i in train:
    print(i)
new run: 1668754307.082405 
format error: None 
execution error:  

for i,j in enumerate(train):
    if i%1000:
        print(i)
    X, y = get_features_row(training, j)
    X_train.append(X)
    y_train.append(y)
new run: 1668754946.2484639 
format error: None 
execution error: None 

for i,j in enumerate(train):
    if i%1000 == 0:
        print(i)
    X, y = get_features_row(training, j)
    X_train.append(X)
    y_train.append(y)
new run: 1668757003.041165 
format error: None 
execution error: None 
for i,j in enumerate(test):
    if i%1000 == 0:
        print(i)
    X, y = get_features_row(testing, j)
    X_test.append(X)
    y_test.append(y)
    
new run: 1668772373.724874 
format error: None 
execution error: None 
from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import explained_variance_score
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score, ConfusionMatrixDisplay, confusion_matrix
import matplotlib.pyplot as plt
new run: 1668772377.156138 
format error: None 
execution error: float() argument must be a string or a number, not 'coo_matrix' 
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668772455.506658 
format error: None 
execution error: blocks must be 2-D 
X_test = vstack(X_test)
y_test = vstack(y_test)
X_train = vstack(X_train)
y_train = vstack(y_train)
new run: 1668772492.564675 
format error: None 
execution error:  
for x in y_test:
    print(x.shape)
    raise ValueError()
new run: 1668772579.983863 
format error: None 
execution error: None 
for i in range(len(y_test)):
    y_test[i] = y_test[i].reshape((-1, 1))

for i in range(len(y_train)):
    y_train[i] = y_train[i].reshape((-1, 1))
new run: 1668772584.770397 
format error: None 
execution error: 'coo_matrix' object is not subscriptable 
X_test = vstack(X_test)
y_test = vstack(y_test)
X_train = vstack(X_train)
y_train = vstack(y_train)
new run: 1668772607.230062 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
from sklearn.preprocessing import OneHotEncoder
from scipy.sparse import hstack,vstack
import numpy as np
new run: 1668772617.278979 
format error: None 
execution error: 'coo_matrix' object is not subscriptable 
X_test = vstack(X_test)
y_test = vstack(y_test)
X_train = vstack(X_train)
y_train = vstack(y_train)
new run: 1668772693.629038 
format error: None 
execution error: blocks must be 2-D 
#X_test = vstack(tuple(X_test))
y_test = vstack(y_test)
X_train = vstack(X_train)
y_train = vstack(y_train)
new run: 1668772725.1806111 
format error: None 
execution error: None 
#X_test = vstack(tuple(X_test))
#y_test = vstack(y_test)
X_train = vstack(X_train)
#y_train = vstack(y_train)
new run: 1668772740.278375 
format error: None 
execution error: None 
print(X_test.shape)
print(X_train.shape)
new run: 1668772807.859516 
format error: None 
execution error: None 
print(X_test.shape)
print(len(y_test))
new run: 1668772815.981295 
format error: None 
execution error: None 
print(X_test.shape)
print(len(y_train))
new run: 1668772874.3856351 
format error: None 
execution error: 'coo_matrix' object is not subscriptable 
print(X_test.shape)
X_train = X_train[248:]
y_train = y_train[248:]
new run: 1668772940.073118 
format error: None 
execution error: None 
y_test = np.concatenate(y_test, axis = 0)
y_train = np.concatenate(y_train, axis = 0)
new run: 1668772954.7431118 
format error: None 
execution error:  
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668772989.9815822 
format error: None 
execution error: None 
y_test = y_test.reshape(-1)
y_train = y_train.reshape(-1)
new run: 1668773009.5402792 
format error: None 
execution error: None 
model = RandomForestClassifier(min_samples_leaf = 100)
model.fit(X_train, y_train)
new run: 1668773015.626102 
format error: None 
execution error: None 
y_out = model.predict(X_test)
matrix = confusion_matrix(y_test, y_out)
display = ConfusionMatrixDisplay(matrix)
display.plot()
new run: 1668773018.998753 
format error: None 
execution error: None 
print(accuracy_score(y_test, y_out))
new run: 1668773897.5746062 
format error: None 
execution error: None 

import pandas as pd
from pandas.api.types import CategoricalDtype
from sklearn.preprocessing import OneHotEncoder
from scipy.sparse import hstack,vstack
import numpy as np
new run: 1668774096.2495391 
format error: None 
execution error: None 

training = pd.read_csv('../archive/Combined_Flights_2018.csv').sample(100000)
testing = pd.read_csv('../archive/Combined_Flights_2019.csv').sample(100000)


new run: 1668774097.670909 
format error: None 
execution error: 'DIVERTED' 

training = training[training['DIVERTED'] == 0]
testing = testing[testing['CANCELLED'] == 0]

new run: 1668774181.7686899 
format error: None 
execution error: None 

training = training[training['Diverted'] == 0]
testing = testing[testing['Cancelled'] == 0]

new run: 1668774194.23105 
format error: None 
execution error: None 
print(training.shape)
new run: 1668774212.416806 
format error: None 
execution error: None 
print(training.keys())
new run: 1668774256.8413692 
format error: None 
execution error: None 
training = training[['DayOfWeek', 'Airline', 'CRSDepTime', 'Origin', 'Dest', 'Distance', 'ArrDel15']]
testing = testing[['DayOfWeek', 'Airline', 'CRSDepTime', 'Origin', 'Dest', 'Distance', 'ArrDel15']]

new run: 1668774290.9399219 
format error: None 
execution error: None 

training.dropna()
training = training.reset_index(drop=True)
testing.dropna()
testing = testing.reset_index(drop=True)
new run: 1668774318.937004 
format error: None 
execution error: name 'df' is not defined 
df = df.rename(columns = {'DayOfWeek' : 'Weekend'})
df['Weekend'] = (df['Weekend'] > 5).astype(int)
new run: 1668774339.361933 
format error: None 
execution error: None 
training = training.rename(columns = {'DayOfWeek' : 'Weekend'})
training['Weekend'] = (training['Weekend'] > 5).astype(int)
testing = testing.rename(columns = {'DayOfWeek' : 'Weekend'})
testing['Weekend'] = (testing['Weekend'] > 5).astype(int)
new run: 1668774365.1193368 
format error: None 
execution error: name 'df' is not defined 
df['Airline'].nunique()
new run: 1668774369.954056 
format error: None 
execution error: None 
training['Airline'].nunique()
new run: 1668774427.940872 
format error: None 
execution error: None 
carrier_df = training[['Airline','ArrDel15']].groupby('Airline').sum().sort_values(by='ArrDel15',ascending=False)
carrier_df['CARRIER_cat'] = pd.qcut(carrier_df['ArrDel15'], 28, labels = False)
carrier_df
new run: 1668774477.874648 
format error: None 
execution error: None 
data_carrier = carrier_df.loc[training['Airline']].reset_index()
training['CARRIER_cat'] = data_carrier['CARRIER_cat']
new run: 1668774507.427636 
format error: None 
execution error: None 
data_carrier = carrier_df.loc[testing['Airline']].reset_index()
testing['CARRIER_cat'] = data_carrier['CARRIER_cat']
